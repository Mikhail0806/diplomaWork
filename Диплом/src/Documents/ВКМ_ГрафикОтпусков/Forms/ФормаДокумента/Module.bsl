

#Область ОбработчикиСобытийФормы 

 &НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	РасчетВидимости(); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	РасчетВидимости();
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)  
	РасчетВидимости();   
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

&НаКлиенте
Процедура ОткрытьГрафик(Команда)  
	
	Адрес = ПодготовитьДанныеГрафика();
	Параметр = Новый Структура("Адрес", Адрес);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика",Параметр,Элементы.ОтпускаСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетВидимости()
	
	
	
	
	Для Каждого Строка Из ДнейОтпуска Цикл
		
		
			
					
			Если Строка.ДнейОтпуска > 28 Тогда 
				
				Строка.Больше28Дней = Истина;
				Сообщение = СтрШаблон("У сотрудника %1, номер строки %2: количесвто дней отпуска превыашет 28 дней",Строка.Сотрудник);
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение,,,Строка.НомерСтроки);
			Иначе 
				
				Строка.Больше28Дней = Ложь;
				ОчиститьСообщения(); 
				
			КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеГрафика()

	ТаблицаОтпусков.Очистить();

	Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
		ОтпускСотрудника = ТаблицаОтпусков.Добавить();
		ОтпускСотрудника.Сотрудник = Строка.Сотрудник;
		ОтпускСотрудника.ДатаНачала = Строка.ДатаНачала;
		ОтпускСотрудника.ДатаОкончания = Строка.ДатаОкончания;

	КонецЦикла;

	ТаблицаПодобранныхТоваров = ТаблицаОтпусков.Выгрузить();

	Возврат ПоместитьВоВременноеХранилище(ТаблицаПодобранныхТоваров, УникальныйИдентификатор);

КонецФункции

#КонецОбласти



