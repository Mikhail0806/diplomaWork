

#Область ОбработчикиСобытийФормы 

 &НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	РасчетВидимости(); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	Данные = ТекущийЭлемент.ТекущиеДанные;
	Если ЗначениеЗаполнено(Данные.ДатаНачала)Тогда 
	Данные.ДнейОтпуска = ((Данные.ДатаОкончания - Данные.ДатаНачала)/86400)+1;	
	КонецЕсли;
	
	РасчетВидимости();
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)  
//	РасчетВидимости();   
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

&НаКлиенте
Процедура ОткрытьГрафик(Команда)  
	
	Адрес = ПодготовитьДанныеГрафика();
	Параметр = Новый Структура("Адрес", Адрес);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика",Параметр,Элементы.ОтпускаСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетВидимости()

	ДниОтпсука = Новый Соответствие;

	Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
		Повтор = ДниОтпсука.Получить(Строка.Сотрудник);

		Если Повтор = Неопределено Тогда

			ДниОтпсука.Вставить(Строка.Сотрудник, Строка.ДнейОтпуска);

		Иначе
			
			НовоеЗначение = Повтор + Строка.ДнейОтпуска;
			ДниОтпсука.Вставить(Строка.Сотрудник, НовоеЗначение);
			
			Если НовоеЗначение > 28 Тогда

				Строка.Больше28Дней = Истина;
				Сообщение = СтрШаблон("У сотрудника %1 кол-во дней отпуска указано больше 28 дней.",Строка.Сотрудник);
				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение);
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		
//		Если ЗначениеЗаполнено(Строка.ДатаНачала) И  ЗначениеЗаполнено(Строка.ДатаОкончания) Тогда
//			
			
//			Если Строка.ДнейОтпуска > 28 Тогда 
//				
//				Строка.Больше28Дней = Истина;
//				Сообщение = СтрШаблон("У сотрудника %1, номер строки %2: количесвто дней отпуска превыашет 28 дней",Строка.Сотрудник, Строка.НомерСтроки);
//				ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение,,,Строка.НомерСтроки);
//			Иначе 
//				
//				Строка.Больше28Дней = Ложь;
//				ОчиститьСообщения(); 
//				
//			КонецЕсли;
//			
//		КонецЕсли;
		КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеГрафика()

	ТаблицаОтпусков.Очистить();

	Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
		ОтпускСотрудника = ТаблицаОтпусков.Добавить();
		ОтпускСотрудника.Сотрудник = Строка.Сотрудник;
		ОтпускСотрудника.ДатаНачала = Строка.ДатаНачала;
		ОтпускСотрудника.ДатаОкончания = Строка.ДатаОкончания;

	КонецЦикла;

	ТаблицаПодобранныхТоваров = ТаблицаОтпусков.Выгрузить();

	Возврат ПоместитьВоВременноеХранилище(ТаблицаПодобранныхТоваров, УникальныйИдентификатор);

КонецФункции

#КонецОбласти



