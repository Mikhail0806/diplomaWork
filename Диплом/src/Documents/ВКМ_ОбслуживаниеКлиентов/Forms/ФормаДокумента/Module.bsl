
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

 &НаКлиенте
Процедура ДатаПроведенияРаботПриИзменении(Элемент)
	
	Если  Не Объект.Ссылка.Пустая() Тогда 
		//Заполнение таблицы значений 
		Изменения = ИзменениеРеквизитов.Добавить();
		Изменения.Реквизит = Элементы.ДатаПроведенияРабот.Заголовок;
		Изменения.Изменение = Объект.ДатаПроведенияРабот;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	СозданиеЭлементаСправочника();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециалистПриИзменении(Элемент)
	
	Если  Не Объект.Ссылка.Пустая() Тогда 
		Изменения = ИзменениеРеквизитов.Добавить();
		Изменения.Реквизит = Элементы.Специалист.Имя;
		Изменения.Изменение = Объект.Специалист;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРаботПриИзменении(Элемент) 
	
	Объект.ВремяНачалаРабот = РаботаСоВременем(Объект.ДатаПроведенияРабот,Объект.ВремяНачалаРабот);
	
	Если  Не Объект.Ссылка.Пустая() Тогда 	
		Изменения = ИзменениеРеквизитов.Добавить();
		Изменения.Реквизит = Элементы.ВремяНачалаРабот.Заголовок;
		Изменения.Изменение = Формат(Объект.ВремяНачалаРабот,"ДФ=ЧЧ:мм"); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияРаботПриИзменении(Элемент)
	
	Объект.ВремяОкончанияРабот = РаботаСоВременем(Объект.ДатаПроведенияРабот,Объект.ВремяОкончанияРабот);
	
	Если  Не Объект.Ссылка.Пустая() Тогда 
		Изменения = ИзменениеРеквизитов.Добавить();
		Изменения.Реквизит = Элементы.ВремяОкончанияРабот.Заголовок;
		Изменения.Изменение = Формат(Объект.ВремяОкончанияРабот,"ДФ=ЧЧ:мм");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Функция  РаботаСоВременем(ДатаПроведения,ВремяПроведения)
	
	ДатаВремя = Дата(Год(ДатаПроведения),Месяц(ДатаПроведения),День(ДатаПроведения),
	Час(ВремяПроведения),Минута(ВремяПроведения),Секунда(ВремяПроведения));
	Возврат ДатаВремя;
	
КонецФункции 

&НаСервере
Процедура СозданиеЭлементаСправочника()
	
	ТекстСообщения = "";
	Для Каждого Строка Из ИзменениеРеквизитов Цикл 
		
		СтрокаСообщения = СтрШаблон("Реквизит ""%1"" изменен: %2",
		Строка.Реквизит, Строка.Изменение);
		
		ТекстСообщения = ТекстСообщения + СтрокаСообщения + Символы.ПС;
		
	КонецЦикла;
	
	// Если нужно добавить заголовок в начало
	Если Не ПустаяСтрока(ТекстСообщения) Тогда
		ТекстСообщения = "Уведомление об изменениях от " + ТекущаяДата() + " : " + Символы.ПС + ТекстСообщения;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстСообщения) Тогда
		
		НовыйЭлемент = Справочники.ВКМ_УведомленияТелеграм.СоздатьЭлемент();
		НовыйЭлемент.ТекстСообщения = ТекстСообщения;
		НовыйЭлемент.Записать();
		
		ТекстСообщения = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

