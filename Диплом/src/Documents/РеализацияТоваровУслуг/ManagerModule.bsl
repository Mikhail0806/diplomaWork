#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда

		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(
			Метаданные.Документы.РеализацияТоваровУслуг);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;

	КонецЕсли;

	Возврат Неопределено;
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "УправлениеПечатью";
	КомандаПечати.Идентификатор = "Документ.РеализацияТоваровУслуг.ПФ_DOC_АктОбОказанииУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.Порядок = 5;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВКМ_МассовоеСозданиеАктов(Дата) Экспорт

	Массив = Новый Массив;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Организация
	|ПОМЕСТИТЬ ВТ_Договоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДоговора <= &Дата
	|	И ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДоговора >= &Дата
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)) КАК Документ,
	|	ВТ_Договоры.Ссылка КАК Договор
	|ИЗ
	|	ВТ_Договоры КАК ВТ_Договоры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Договоры.Ссылка = РеализацияТоваровУслуг.Договор";

	Запрос.УстановитьПараметр("Дата", Дата);  //Параметр.Дата

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	;
	
	Пока Выборка.Следующий() Цикл

		Если Выборка.Документ.Пустая() Тогда

			Документ = СоздатьДокумент();
			Документ.Дата = Дата;
			Документ.Ответственный = Пользователи.ТекущийПользователь();
			Документ.Заполнить(Выборка.Договор);
		Иначе

			Документ = Выборка.Документ.ПолучитьОбъект();
//			Документ.ВыполнитьАвтозаполнение();
//			Документ.ПроверитьЗаполнение();
//			Документ.Записать(РежимЗаписиДокумента.Проведение);
//
//			ДобавитьСтруктуру = Новый Структура;
//			ДобавитьСтруктуру.Вставить("Документ", Документ.Ссылка);
//			ДобавитьСтруктуру.Вставить("Договор", Выборка.Договор);
//			Массив.Добавить(ДобавитьСтруктуру);

		КонецЕсли;
		
		Документ.ВыполнитьАвтозаполнение();
		Документ.ПроверитьЗаполнение();
		Документ.Записать(РежимЗаписиДокумента.Проведение);

		ДобавитьСтруктуру = Новый Структура;
		ДобавитьСтруктуру.Вставить("Документ", Документ.Ссылка);
		ДобавитьСтруктуру.Вставить("Договор", Выборка.Договор);
		Массив.Добавить(ДобавитьСтруктуру);

	КонецЦикла;

	Возврат Массив;

КонецФункции

#КонецОбласти
#КонецЕсли  






