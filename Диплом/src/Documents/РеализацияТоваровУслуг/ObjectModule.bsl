#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;  
	
	//ВКМ_Создание записи в регситр ВыполененныеРаботыСпециалистаНоменклатура
	Движения.ВКМ_ВыполененныеРаботы.Записывать = Истина;
	//Конец

	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;  
	
	//ВКМ_Создание записи в регситр ВыполененныеРаботыСпециалистаНоменклатура:Запрос и формирвоание движения
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК Сумма
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		ДвижениеНоменклаутра = Движения.ВКМ_ВыполененныеРаботы.ДобавитьПриход();
		ДвижениеНоменклаутра.Период = Дата;
		ДвижениеНоменклаутра.Организация = Организация;
		ДвижениеНоменклаутра.Договор = Договор;
		ДвижениеНоменклаутра.Номенклатура = Выборка.Номенклатура;
		ДвижениеНоменклаутра.Сумма = Выборка.Сумма;

	КонецЦикла;
	
	//Конец

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Ответственный = Пользователи.ТекущийПользователь();
	
	//ВКМ заполение документа при массов создании

	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ЗаполнитьНаОснованииДоговора(ДанныеЗаполнения);
	КонецЕсли;
	//Конец 

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");

	ВКМ_СуммаПрописью = ВКМ_СуммаПрописью(СуммаДокумента);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора")
		= Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда

		Массив = Новый Массив;
		Массив.Добавить("Основание");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, Массив);

	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЗаказПокупателя.Организация КАК Организация,
				   |	ЗаказПокупателя.Контрагент КАК Контрагент,
				   |	ЗаказПокупателя.Договор КАК Договор,
				   |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
				   |	ЗаказПокупателя.Товары.(
				   |		Ссылка КАК Ссылка,
				   |		НомерСтроки КАК НомерСтроки,
				   |		Номенклатура КАК Номенклатура,
				   |		Количество КАК Количество,
				   |		Цена КАК Цена,
				   |		Сумма КАК Сумма
				   |	) КАК Товары,
				   |	ЗаказПокупателя.Услуги.(
				   |		Ссылка КАК Ссылка,
				   |		НомерСтроки КАК НомерСтроки,
				   |		Номенклатура КАК Номенклатура,
				   |		Количество КАК Количество,
				   |		Цена КАК Цена,
				   |		Сумма КАК Сумма
				   |	) КАК Услуги
				   |ИЗ
				   |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
				   |ГДЕ
				   |	ЗаказПокупателя.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);

	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;

	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;

	Основание = ДанныеЗаполнения;

КонецПроцедуры

Процедура ВыполнитьАвтозаполнение() Экспорт

	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();

	Если ПустаяСтрока(НоменклатураАбонентскаяПлата) И ПустаяСтрока(НоменклатураРаботыСпециалиста) Тогда

		Сообщение = "Проверьте заполнение констант номенклатуры";
		ОбщегоНазначения.СообщитьПользователю(Сообщение);
		Возврат;

	КонецЕсли;

	Товары.Очистить();
	Услуги.Очистить();

	ВКМ_ЗаполнениеТЧ_АбенентскойПлатой(НоменклатураАбонентскаяПлата);

	ВКМ_Заполнение_РаботаСпециалиста(НоменклатураРаботыСпециалиста);
	
КонецПроцедуры

Процедура ВКМ_Заполнение_РаботаСпециалиста(Знач НоменклатураРаботыСпециалиста)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОстатки.КоличествоЧасовОстаток, 0)) КАК КоличествоЧасов,
	|	СУММА(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОстатки.СуммаКОплатеОстаток, 0)) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Остатки(
	|			,
	|			Договор = &Договор
	|				И Договор.ВКМ_ДатаНачалаДоговора <= &Дата
	|				И Договор.ВКМ_ДатаОкончанияДоговора >= &Дата) КАК ВКМ_ВыполненныеКлиентуРаботыОстатки";

	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Договор", Договор);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		СтрокиТабЧасти = Услуги.Добавить();
		СтрокиТабЧасти.Номенклатура = НоменклатураРаботыСпециалиста;
		СтрокиТабЧасти.Количество = Выборка.КоличествоЧасов;
		СтрокиТабЧасти.Сумма = Выборка.СуммаКОплате;

	КонецЦикла;

КонецПроцедуры

Процедура ВКМ_ЗаполнениеТЧ_АбенентскойПлатой(Знач НоменклатураАбонентскаяПлата)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты, 0) КАК Сумма
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка
	|	И ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты > 0";

	Запрос.УстановитьПараметр("Ссылка", Договор);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Если Выборка.Следующий() Тогда

		СтрокиТабЧасти = Услуги.Добавить();
		СтрокиТабЧасти.Номенклатура = НоменклатураАбонентскаяПлата;
		СтрокиТабЧасти.Сумма = Выборка.Сумма;

	КонецЕсли;

КонецПроцедуры

Функция ВКМ_СуммаПрописью(СуммаДокумента)
	;
	
	Сумма  = ЧислоПрописью(СуммаДокумента, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
	Возврат Сумма;

КонецФункции

Процедура ЗаполнитьНаОснованииДоговора(ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	СуммаДокумента = Услуги.Итог("Сумма");

КонецПроцедуры

#КонецОбласти

#КонецЕсли